name: CI/CD Pipeline for Flask and Nginx with Docker Compose

on:
  push:
    branches:
      - main  # Запускать pipeline при пуше в ветку main
  pull_request:
    branches:
      - main  # Запускать при создании PR в ветку main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout кода из репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Установка Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Логин в Docker Hub (если требуется для деплоя)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Добавьте свой username в secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Добавьте свой пароль в secrets

      # Сборка контейнеров с помощью Docker Compose
      - name: Build and run services
        run: |
          docker-compose up -d --build  # Собрать и запустить контейнеры в фоне

      # Запуск тестов для Flask-приложения
      - name: Run tests
        run: |
          docker-compose exec flask-service pytest  # Замените flask-service на ваше имя контейнера Flask

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Выполнить деплой только после успешного завершения тестов

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Установка Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Деплой приложения с помощью Docker Compose
      - name: Deploy application
        run: |
          docker-compose down  # Остановить существующие контейнеры (если они есть)
          docker-compose up -d --build  # Собрать и запустить контейнеры снова
